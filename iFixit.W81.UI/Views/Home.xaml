<common:BasePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="pageRoot"
    x:Class="iFixit.W81.UI.Views.Home"
    xmlns:common="using:iFixit.W81.UI.Common"
    xmlns:shared="using:iFixit.UI.Shared"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Extensions="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:Q42Controls="using:Q42.WinRT.Controls"
    xmlns:coding4FunControls ="using:Coding4Fun.Toolkit.Controls"
    xmlns:views="using:iFixit.UI.Shared"
    DataContext="{Binding Source={StaticResource Locator}, Path=Home}"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="DownAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="CropAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Crop"/>
            <Setter Property="Content" Value="&#xe23a;"/>
        </Style>

        <Style x:Key="HomeGridView" TargetType="GridViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0,0,0,0"/>

            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>

            <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="False"></Setter>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <Grid x:Name="OuterContainer" VerticalAlignment="Stretch" Margin="0,0,80,0" >

                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              HorizontalAlignment="Stretch" 
                                              Margin="0" 
                                              VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <VirtualizingStackPanel   Orientation="Horizontal" Margin="0,0,0,0"  VerticalAlignment="Stretch"/>
        </ItemsPanelTemplate>

        <Style x:Key="SemanticZoomStyle1" TargetType="SemanticZoom">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="SemanticZoom">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SemanticZoomStates">
                                    <VisualState x:Name="ZoomInView">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ZoomedOutPresenter"/>
                                            <FadeInThemeAnimation TargetName="ZoomedInPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ZoomOutView">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ZoomedInPresenter"/>
                                            <FadeInThemeAnimation TargetName="ZoomedOutPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ZoomOutButtonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ZoomOutButtonVisible" To="ZoomOutButtonHidden">
                                            <Storyboard BeginTime="0:0:3">
                                                <FadeOutThemeAnimation TargetName="ZoomOutButton"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="ZoomOutButton">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>False</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="ZoomOutButtonVisible">
                                        <Storyboard>
                                            <FadeInThemeAnimation TargetName="ZoomOutButton"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ZoomOutButtonHidden">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ZoomOutButton"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="ZoomOutButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <x:Boolean>False</x:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalContentAlignment="Center" HorizontalScrollBarVisibility="Hidden" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsScrollInertiaEnabled="True" IsZoomChainingEnabled="True" IsZoomInertiaEnabled="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" MinZoomFactor="0.5" MaxZoomFactor="1.0" VerticalScrollBarVisibility="Hidden" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalContentAlignment="Center" ZoomMode="Enabled">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <ScrollContentPresenter x:Name="ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderTransformOrigin="0, 0">
                                    <Border.RenderTransform>
                                        <CompositeTransform x:Name="ManipulatedElementTransform"/>
                                    </Border.RenderTransform>
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="ZoomedInPresenter" Content="{TemplateBinding ZoomedInView}" IsHitTestVisible="False" RenderTransformOrigin="0.5, 0.5" Visibility="Collapsed">
                                            <ContentPresenter.RenderTransform>
                                                <CompositeTransform x:Name="ZoomedInTransform"/>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                        <ContentPresenter x:Name="ZoomedOutPresenter" Content="{TemplateBinding ZoomedOutView}" IsHitTestVisible="False" RenderTransformOrigin="0.5, 0.5" Visibility="Collapsed">
                                            <ContentPresenter.RenderTransform>
                                                <CompositeTransform x:Name="ZoomedOutTransform"/>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                </Border>
                            </ScrollViewer>
                            <Button x:Name="ZoomOutButton" HorizontalAlignment="Right" IsTabStop="False" Margin="0,0,7,24" VerticalAlignment="Bottom">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{StaticResource SemanticZoomButtonBorderThemeBrush}" BorderThickness="1" Background="{StaticResource SemanticZoomButtonBackgroundThemeBrush}" Height="21" Width="21">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="NormalStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPointerOverBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPointerOverBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Glyph">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPointerOverForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPressedBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Glyph">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SemanticZoomButtonPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <TextBlock x:Name="Glyph" Foreground="{StaticResource SemanticZoomButtonForegroundThemeBrush}" FontSize="{StaticResource SemanticZoomButtonFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Center" IsHitTestVisible="False" Margin="0,0,0,1" Text="&#xE0B8;" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FavoritesItems" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <Border x:Name="OuterContainer" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PointerOverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource iFixitBlueBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource iFixitBlueBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedEarmark" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="ContentContainer" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="ContentContainer" />
                                            <DoubleAnimation Storyboard.TargetName="PointerOverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource iFixitBlueBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource iFixitBlueBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedEarmark" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" 
                                                             Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualState x:Name="VerticalSelectionHint">
                                        <Storyboard>
                                            <SwipeHintThemeAnimation TargetName="SelectionBackground" ToVerticalOffset="15" ToHorizontalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="ContentBorder" ToVerticalOffset="15" ToHorizontalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="SelectedBorder" ToVerticalOffset="15" ToHorizontalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToVerticalOffset="15" ToHorizontalOffset="0" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HintGlyph" Storyboard.TargetProperty="Opacity" Duration="0:0:0.500">
                                                <DiscreteDoubleKeyFrame Value="0.5" KeyTime="0:0:0" />
                                                <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:0.500" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="HorizontalSelectionHint">
                                        <Storyboard>
                                            <SwipeHintThemeAnimation TargetName="SelectionBackground" ToHorizontalOffset="-23" ToVerticalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="ContentBorder" ToHorizontalOffset="-23" ToVerticalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="SelectedBorder" ToHorizontalOffset="-23" ToVerticalOffset="0" />
                                            <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToHorizontalOffset="-23" ToVerticalOffset="0" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HintGlyph" Storyboard.TargetProperty="Opacity" Duration="0:0:0.500">
                                                <DiscreteDoubleKeyFrame Value="0.5" KeyTime="0:0:0" />
                                                <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:0.500" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NoSelectionHint" />
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NoSelectionHint" GeneratedDuration="0:0:0.65" />
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselecting">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UnselectedPointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UnselectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectingGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                                            <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selecting">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectingGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource iFixitBlue}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging" />
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="InnerDragContent" Storyboard.TargetProperty="Opacity" Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" />
                                            <DragItemThemeAnimation TargetName="InnerDragContent" />
                                            <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                            <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="OuterContainer" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                             on the same elements animate an internal Opacity. -->
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                            <FadeOutThemeAnimation TargetName="SelectionBackground" />
                                            <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                            <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                            <FadeOutThemeAnimation TargetName="PointerOverBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentContainer" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2" />
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint" />
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2" />
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable" />
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Path x:Name="SelectingGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,9.5,9.5,0" VerticalAlignment="Top" FlowDirection="LeftToRight" />
                                <Border x:Name="HintGlyphBorder" Height="40" Width="40" HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="0" Margin="0">
                                    <Path x:Name="HintGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top" FlowDirection="LeftToRight" />
                                </Border>
                                <Border x:Name="ContentContainer" Margin="0">
                                    <!-- This extra wrapper grid is necessary because rendertransforms set by the reorder hint animations
                                     will be lost when ContentContainer becomes a LTE -->
                                    <Grid x:Name="InnerDragContent">
                                        <Rectangle x:Name="PointerOverBorder" IsHitTestVisible="False" Opacity="0" 
                                                   Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" 
                                                   Margin="1" />
                                        <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" StrokeThickness="2" 
                                                   Stroke="{StaticResource iFixitBlueBrush}" />
                                        <Rectangle x:Name="SelectionBackground" Margin="0" 
                                                   Fill="{StaticResource iFixitBlueBrush}"
                                                   Opacity="0" />
                                        <Border x:Name="ContentBorder" Background="{TemplateBinding Background}" 
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="0" Padding="0"
                                                Margin="0">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                  
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Margin="0" />
                                                <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                                 In the DataPlaceholder state, the Content is not loaded yet so we
                                                 approximate the size of the item using placeholder text. -->
                                                <TextBlock x:Name="PlaceholderTextBlock" Visibility="Collapsed" Text="Xg" 
                                                           Foreground="{x:Null}" Margin="{TemplateBinding Padding}" IsHitTestVisible="False" />
                                                <Rectangle x:Name="PlaceholderRect" Visibility="Collapsed" 
                                                           Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" />
                                                <Rectangle x:Name="MultiArrangeOverlayBackground" IsHitTestVisible="False" 
                                                           Opacity="0" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" />
                                            </Grid>
                                        </Border>
                                        <Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Opacity="0" 
                                                   Stroke="{StaticResource iFixitBlueBrush}" 
                                                   StrokeThickness="0" 
                                                   Margin="0" />
                                        <Border x:Name="SelectedCheckMarkOuter" IsHitTestVisible="False" HorizontalAlignment="Right"
                                                VerticalAlignment="Top" Margin="0">
                                            <Grid x:Name="SelectedCheckMark" Opacity="0" Height="40" Width="40">
                                                <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource iFixitBlueBrush}" Stretch="Fill" />
                                                <Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top" FlowDirection="LeftToRight" />
                                            </Grid>
                                        </Border>
                                        <TextBlock x:Name="MultiArrangeOverlayText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontFamily="{StaticResource ContentControlThemeFontFamily}" FontSize="26.667" IsHitTestVisible="False" Opacity="0" TextWrapping="Wrap" TextTrimming="WordEllipsis" Margin="18,9,0,0" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Page.Resources>


    <common:BasePage.BottomAppBar>
        <AppBar Margin="0" IsSticky="{Binding SelectionMode, Mode=TwoWay}" IsOpen="{Binding SelectionMode,Mode=TwoWay}" BorderBrush="{StaticResource SecondaryBackgroundBrush}" BorderThickness="0,3,0,0" >

            <Grid>
                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Left">

                    <Button Style="{StaticResource SelectAllAppBarButtonStyle}" Command="{Binding SelectAllSelectedItems, Mode=OneWay}"/>
                    <Button Style="{StaticResource ClearSelectionAppBarButtonStyle}" Command="{Binding ClearSelectedItems, Mode=OneWay}"/>
                    <Button Style="{StaticResource UnfavoriteAppBarButtonStyle}" Command="{Binding DeleteFavorites, Mode=OneWay}" />
                </StackPanel>
                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource RefreshAppBarButtonStyle}" Command="{Binding LoadHome, Mode=OneTime}" />
                </StackPanel>
            </Grid>

        </AppBar>
    </common:BasePage.BottomAppBar>

    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding LoadHome}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>

    <Grid Background="{StaticResource ThirdBackgroundBrush}" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="61"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <ContentThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <UC:TopMenu xmlns:UC="using:iFixit.W81.UI.Views.UC"  DataContext="{Binding}"/>


        <GridView   Grid.Row="1" Name="MainGridView"
                	ItemsPanel="{StaticResource ItemsPanelTemplate1}"
                    ItemContainerStyle="{StaticResource HomeGridView}"
                    HorizontalContentAlignment="Stretch" 
                    Margin="0,0,0,-15"
				    VerticalContentAlignment="Stretch" >
            <GridView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="GroupItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GroupItem">
                                        <Grid>

                                            <ItemsControl x:Name="ItemsControl" 
        												ItemsSource="{Binding GroupItems}"  
		        										Grid.Row="1" 
                                                        HorizontalContentAlignment="Stretch" 
                                                        ScrollViewer.VerticalScrollMode="Disabled" 
                                                        VerticalContentAlignment="Stretch">
                                            </ItemsControl>
                                        </Grid>


                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>

                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Margin="0,0,0,-10"  Orientation="Horizontal" ScrollViewer.VerticalScrollMode="Disabled" />
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </GridView.GroupStyle>
            <GridViewItem  >
                <Grid  Width="520"  Margin="0,0,0,0"  >
                    <Grid IsHitTestVisible="False" >
                        <Image Stretch="UniformToFill" 
                               Extensions:ImageExtensions.FadeInOnLoaded="True" 
                               Extensions:ImageExtensions.ImageLoadedTransitionType="FadeIn" 
                             
                               Source="{Binding  MainNews.ImageUrl}">



                        </Image>
                        
                    </Grid>
               

                    <Grid Margin="0,0,0,0"  VerticalAlignment="Bottom" 
                              Visibility="{Binding MainNews.DateString, Converter={StaticResource StringToVisibilityConverter}}" >
                        <Grid.Background>
                            <SolidColorBrush Color="{StaticResource Black}" Opacity="0.5"/>
                        </Grid.Background>
                        <StackPanel  Margin="20,20,20,20"  >


                            <TextBlock TextWrapping="Wrap" Text="{Binding MainNews.DateString}" 
                		HorizontalAlignment="Left"	VerticalAlignment="Center"	
                		Foreground="#cccccc" FontSize="14" FontWeight="Normal" Margin="12,0,0,0" />
                            <TextBlock TextWrapping="Wrap" Text="{Binding MainNews.Title}" 
                		HorizontalAlignment="Left"	VerticalAlignment="Center"	
                		Foreground="#ffffff" FontSize="24" FontWeight="Bold" Margin="12,0,0,0" />
                            <TextBlock TextWrapping="Wrap" Text="{Binding MainNews.Summary, Converter={StaticResource SubStringConverter}, ConverterParameter=200}" 
                		HorizontalAlignment="Left"	VerticalAlignment="Center"	
                		Foreground="#ffffff" FontSize="18" Margin="12,6,0,0" />
                            <HyperlinkButton IsHitTestVisible="True" Content="READ MORE" NavigateUri="http://www.ifixit.org"></HyperlinkButton>
                        </StackPanel>
                    </Grid>


                </Grid>
            </GridViewItem>
            <!-- MASTER CATEGORIES -->
            <GridViewItem >
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="95"/>
                        <RowDefinition />

                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <TextBlock Margin="0,0,0,0"  Text="{Binding Labels.Translation.Categories, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                                       Style="{StaticResource GridHeaderTitle}" />
                    </StackPanel>

                    <views:VariableGridView  Margin="-20,0,0,0" Grid.Row="1"
                                                    ItemsSource="{Binding Categories, Mode=OneWay}" 
                                                    SelectionMode="None" 
                                                    ItemRowSpanPropertyPath="IndexOf"
                                                    ItemColSpanPropertyPath="IndexOf" 
                                                    ItemContainerStyle="{StaticResource SimpleGridView}"
                               
                                >

                        <views:VariableGridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VariableSizedWrapGrid Orientation="Vertical" 
                                                           Margin="0"
                                                           ItemHeight="180" ItemWidth="420" 
                                                           MaximumRowsOrColumns="10"/>
                            </ItemsPanelTemplate>

                        </views:VariableGridView.ItemsPanel>
                        <views:VariableGridView.ItemTemplate>
                            <DataTemplate>
                                <Button  Width="400" Height="160"
        					            Command="{Binding DataContext.GoToCategory, ElementName=pageRoot}" CommandParameter="{Binding}"
        					            Content="{Binding Name}" Style="{StaticResource BigButtonStyleCategories}" 
        					             />
                            </DataTemplate>
                        </views:VariableGridView.ItemTemplate>
                    </views:VariableGridView>


                </Grid>
            </GridViewItem>
            <!-- FEATURED -->
            <GridViewItem>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="95"/>
                        <RowDefinition />

                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <TextBlock  Margin="0,0,0,0"  Text="{Binding Labels.Translation.Collections, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                                       Style="{StaticResource GridHeaderTitle}" 
                                      />

                        <!--<Button Content="&#xe23a;" Style="{StaticResource TextButtonStyle}" FontFamily="Segoe UI Symbol"  VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="30,10,0,0">
                            <Button.RenderTransform>
                                <CompositeTransform Rotation="90"/>
                            </Button.RenderTransform>
                        </Button>-->
                    </StackPanel>
                    <views:VariableGridView x:Name="FeaturedGV"  
                                Grid.Row="1" 
                                SelectionMode="None"  Margin="-20,0,0,0"
                                ItemsSource="{Binding CollectionsItems}" 
                                ItemRowSpanPropertyPath="IndexOf"
                                ItemColSpanPropertyPath="IndexOf"
                                ItemContainerStyle="{StaticResource SimpleGridView}"
                                >

                        <views:VariableGridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VariableSizedWrapGrid Orientation="Vertical" Margin="0" 
                                                   ItemHeight="180" ItemWidth="340" MaximumRowsOrColumns="15"/>
                            </ItemsPanelTemplate>
                        </views:VariableGridView.ItemsPanel>
                        <views:VariableGridView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="10">
                                    <Button 
        					                Command="{Binding DataContext.GoToGuide, ElementName=pageRoot}" CommandParameter="{Binding}"
        					                Content="{Binding Name}" Style="{StaticResource ButtonStyleGuide}" 
        					                 />
                                </Grid>
                            </DataTemplate>
                        </views:VariableGridView.ItemTemplate>
                    </views:VariableGridView>



                </Grid>

            </GridViewItem>
            <!-- FAVORITES -->
            <GridViewItem>
                <Grid  >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="95"/>
                        <RowDefinition />

                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <TextBlock Text="{Binding Labels.Translation.Favorites, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                                       Style="{StaticResource GridHeaderTitle}" 
                                        Margin="0,0,0,0" />
                    </StackPanel>
                    <views:VariableGridView x:Name="FavoritesGV"  Grid.Row="1" 
                               SelectionMode="Multiple" 
                               Margin="-20,0,0,0" 
                               IsSwipeEnabled="True" 
                               IsItemClickEnabled="True" 
                               ItemClick="FavoritesGV_ItemClick"
                               ItemsSource="{Binding FavoritesItems}" 
                               SelectionChanged="GridView_SelectionChanged"
                               ItemRowSpanPropertyPath="IndexOf"
                               ItemColSpanPropertyPath="IndexOf"
                               ItemContainerStyle="{StaticResource FavoritesItems}"
                               Extensions:GridViewExtensions.BindableSelection="{Binding SelectedFavoritesItems, Mode=TwoWay}"
                                >

                        <views:VariableGridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapGrid Orientation="Vertical" Margin="0" 
                                                   ItemHeight="180" ItemWidth="340" MaximumRowsOrColumns="15"/>
                            </ItemsPanelTemplate>
                        </views:VariableGridView.ItemsPanel>
                        <views:VariableGridView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="10" x:Name="ButtonContent">
                                    <coding4FunControls:SuperImage 
                                            PlaceholderImageStretch="Uniform" 
                                            PlaceholderImageSource="/Assets/no_image.jpg" 
                                            Source="{Binding BigImageUrl}"  
                                            Stretch="UniformToFill"                            >

                                    </coding4FunControls:SuperImage>

                                    <Grid Margin="0,0,0,0" x:Name="ButtonTitleContent" VerticalAlignment="Bottom" >
                                        <Grid.Background>
                                            <SolidColorBrush Color="{StaticResource Black}" Opacity="0.5"/>
                                        </Grid.Background>
                                        <TextBlock TextWrapping="Wrap"  x:Name="ButtonContentText"
											    Text="{Binding Name}" 
											    Margin="12" 
											    HorizontalAlignment="Left"	
											    VerticalAlignment="Center"	
											    Foreground="{StaticResource BackgroundBrush}" />
                                    </Grid>


                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="Tapped">
                                            <Core:InvokeCommandAction   Command="{Binding DataContext.GoToGuide, ElementName=pageRoot}" 
                                            CommandParameter="{Binding}"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                </Grid>

                            </DataTemplate>
                        </views:VariableGridView.ItemTemplate>
                    </views:VariableGridView>

                    <StackPanel Orientation="Horizontal" Grid.Row="1">

                        <Button 
                             Visibility="{Binding IsLoggedIn, Converter={StaticResource NegativeBooleanToVisibilityConverter  }}"
                            Style="{StaticResource TextBlockButtonStyle}" VerticalAlignment="Top" Margin="0,12,0,12"  Foreground="{StaticResource iFixitBlueBrush}" 
                                Content="{Binding Labels.Translation.LogIn2, Mode=OneWay, Source={StaticResource LabelsManager}}" FontSize="36"  Command="{Binding DataContext.DoLogin, Mode=OneWay, ElementName=pageRoot}"></Button>
                        <TextBlock Margin="12"  
                               Foreground="{StaticResource SecondaryBackgroundBrush}"
                               FontSize="36" Text="{Binding FavoritesDescription}"
                               Visibility="{Binding FavoritesDescription, Converter={StaticResource StringToVisibilityConverter  }}"></TextBlock>
                    </StackPanel>




                </Grid>

            </GridViewItem>
        </GridView>





        <UC:LoadingRing Grid.RowSpan="2" DataContext="{Binding}"  xmlns:UC="using:iFixit.W81.UI.Views.UC" d:IsHidden="True"/>






    </Grid>


</common:BasePage>
