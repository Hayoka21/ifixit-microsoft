<common:BasePage
    x:Name="pageRoot"
    x:Class="iFixit.W8.UI.Views.SearchResult"
    DataContext="{Binding Source={StaticResource Locator}, Path=Search}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:iFixit.W8.UI.Views"
    xmlns:common="using:iFixit.W8.UI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Extensions="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:WinRTXamlToolkit="using:WinRTXamlToolkit.Controls"
    xmlns:metroEventToCommand="using:MetroEventToCommand"
    xmlns:callistoEffects="using:Callisto.Effects"
   xmlns:coding4FunControls ="using:Coding4Fun.Toolkit.Controls"
    mc:Ignorable="d">

    <Page.Resources>
        
        <Style x:Key="GuidesListView" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0">
                            <ScrollViewer  ViewChanged="OnScrollViewerViewChanged" x:Name="ScrollViewer" TabNavigation="{TemplateBinding TabNavigation}" 
                                           HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" 
                                           HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}">
                                <ItemsPresenter Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PoductsListView" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer  ViewChanged="Products_OnScrollViewerViewChanged" x:Name="ScrollViewer" TabNavigation="{TemplateBinding TabNavigation}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}">
                                <ItemsPresenter Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DevicesListView" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">

                        <Border x:Name="OuterContainer" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0">
                            
                            <ScrollViewer  ViewChanged="Devices_OnScrollViewerViewChanged" x:Name="ScrollViewer" TabNavigation="{TemplateBinding TabNavigation}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}">
                                <ItemsPresenter Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Name="SearchDeviceItem">

            <Grid Name="ContentContainer" Width="370" Background="White" >
                <coding4FunControls:SuperImage  Height="167"
                                                PlaceholderImageStretch="Uniform" 
                                                PlaceholderImageSource="/Assets/no_image.png" 
                                                Stretch="Uniform"
                                                Source="{Binding ImageUrl}"  
                                                HorizontalAlignment="Right"  >

                </coding4FunControls:SuperImage>


                <Grid VerticalAlignment="Bottom" Name="TitleArea">
                    <Grid.Background>
                        <SolidColorBrush Color="{StaticResource BorderColor}" Opacity="0.9" />
                    </Grid.Background>

                    <TextBlock VerticalAlignment="Bottom" TextWrapping="Wrap" Text="{Binding Name}" Margin="12"   
                                                        Foreground="Black"
                                                        FontSize="16"   >

                    </TextBlock>
                </Grid>
                <metroEventToCommand:EventToCommandManager.Collection>
                    <metroEventToCommand:EventToCommand Command="{Binding DataContext.GoToCategory, ElementName=pageRoot, Mode=OneWay}"
                                                    CommandParameter="{Binding}"  Event="Tapped"></metroEventToCommand:EventToCommand>
                </metroEventToCommand:EventToCommandManager.Collection>
            </Grid>

        </DataTemplate>

        <DataTemplate x:Name="SearchResultProductItem">

            <Grid Margin="0,0,0,0" Width="380" Height="161" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <coding4FunControls:SuperImage Grid.Column="0"
                                        PlaceholderImageStretch="UniformToFill" 
                                        PlaceholderImageSource="/Assets/no_image.png" 
                                        Source="{Binding ImageUrl}" 
                                        Stretch="UniformToFill"  
                                        Width="120" HorizontalAlignment="Left"   />


                <Grid  Margin="12" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding Title}" FontSize="16"  TextWrapping="Wrap">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource BaseBackground}"/>
                        </TextBlock.Foreground></TextBlock>
                    <!--<TextBlock Text="{Binding Summary}" Grid.Row="1" FontSize="16"  TextWrapping="Wrap" Foreground="{StaticResource BaseBackgroundBrush}"></TextBlock>-->
                    <TextBlock Text="{Binding Price}"  Grid.Row="2" TextWrapping="Wrap" Foreground="{StaticResource BaseBackgroundBrush}" ></TextBlock>
                </Grid>




                <metroEventToCommand:EventToCommandManager.Collection>
                    <metroEventToCommand:EventToCommand Command="{Binding DataContext.GoToProduct, ElementName=pageRoot}" CommandParameter="{Binding}"
                                            Event="Tapped"></metroEventToCommand:EventToCommand>
                </metroEventToCommand:EventToCommandManager.Collection>

            </Grid>
        </DataTemplate>

      

    </Page.Resources>

    <metroEventToCommand:EventToCommandManager.Collection>
        <metroEventToCommand:EventToCommand Command="{Binding DoSearch}" 
                                            Event="Loaded"></metroEventToCommand:EventToCommand>
    </metroEventToCommand:EventToCommandManager.Collection>


    <Grid  Background="{StaticResource ThirdBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="61"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <ContentThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <UC:TopMenu   xmlns:UC="using:iFixit.W8.UI.Views.UC"/>
        <Grid Grid.Row="1" Margin="120,48,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="370"  />
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="350" />
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="Auto"/>

            </Grid.ColumnDefinitions>

            <Grid  Grid.Column="0" >
                <ListView  SelectedItem="{Binding SelectedDevice, Mode=TwoWay}"
                                Visibility="{Binding DevicesDescription, Converter={StaticResource NegativeStringToVisibilityConverter  }}" 
                        		ItemsSource="{Binding Devices}" SelectionMode="None"   
                                Style="{StaticResource DevicesListView}"
                                ItemTemplate="{StaticResource SearchDeviceItem}"
                             
                           >
                    <!--  -->
                    <ListView.Header>
                        <TextBlock Text="{Binding Labels.Translation.Devices, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                               Style="{StaticResource GridHeaderTitle}" Margin="6,0,0,12"/>

                    </ListView.Header>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid Orientation="Horizontal" ItemHeight="167" ItemWidth="370" MaximumRowsOrColumns="1" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"  />
                    </Style>
                    <!--<ListView.ItemTemplate>
                        <DataTemplate>
                            <Button  Width="350" Height="160"
        					             Command="{Binding DataContext.GoToCategory, ElementName=pageRoot}" CommandParameter="{Binding}"
        					            Content="{Binding Name}" Style="{StaticResource BigButtonStyleCategories}" 
        					             />
                        </DataTemplate>
                    </ListView.ItemTemplate>-->
                </ListView>
                <TextBlock HorizontalAlignment="Left"  Text="{Binding DevicesDescription}"
                           Visibility="{Binding DevicesDescription, Converter={StaticResource StringToVisibilityConverter  }}"
                           TextWrapping="Wrap"  VerticalAlignment="Top" Style="{StaticResource GridHeaderTitle}" Margin="20"/>
            </Grid>
            <Grid Grid.Column="2" >
                <ListView Grid.Column="2" ItemsSource="{Binding Guides}" 
                          Visibility="{Binding GuidesDescription, Converter={StaticResource NegativeStringToVisibilityConverter  }}" 
                          Style="{StaticResource GuidesListView}" SelectionMode="None" IncrementalLoadingTrigger="Edge"  IsSwipeEnabled="False"  >

                    <ListView.Header>
                        <TextBlock Text="{Binding Labels.Translation.Guides, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                               Style="{StaticResource GridHeaderTitle}" Margin="6,0,0,12"/>

                    </ListView.Header>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="0"></Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate>

                            <Button Height="161" Width="320"
        					                Command="{Binding DataContext.GoToGuideItem, ElementName=pageRoot}" CommandParameter="{Binding}"
        					                Content="{Binding Name}" Style="{StaticResource SearchButtonStyleGuide}" 
        					                 />
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>
                <TextBlock HorizontalAlignment="Left"  Text="{Binding GuidesDescription}" Visibility="{Binding GuidesDescription, Converter={StaticResource StringToVisibilityConverter  }}" TextWrapping="Wrap"  VerticalAlignment="Top" Style="{StaticResource GridHeaderTitle}" Margin="20"/>
            </Grid>
            <Grid  Grid.Column="4" Margin="0,0,0,0"  >
                <ListView SelectedItem="{Binding SelectedProduct, Mode=TwoWay}" Style="{StaticResource PoductsListView}"
            			ItemsSource="{Binding Products}" SelectionMode="None"
                        ItemTemplate="{StaticResource SearchResultProductItem}"
                        Visibility="{Binding ProductsDescription, Converter={StaticResource NegativeStringToVisibilityConverter  }}"   
                          >
                    <ListView.Header>
                        <TextBlock Text="{Binding Labels.Translation.Products, Mode=OneWay, Source={StaticResource LabelsManager}}" 
                               Style="{StaticResource GridHeaderTitle}" Margin="6,0,0,12"/>

                    </ListView.Header>
                </ListView>
                <TextBlock HorizontalAlignment="Left"  Margin="20"
                           Text="{Binding ProductsDescription}" 
                           Visibility="{Binding ProductsDescription, Converter={StaticResource StringToVisibilityConverter  }}" 
                           TextWrapping="Wrap"  VerticalAlignment="Top" Style="{StaticResource GridHeaderTitle}" />
            </Grid>
        </Grid>

        <UC:LoadingRing Grid.RowSpan="2"  DataContext="{Binding}"  xmlns:UC="using:iFixit.W8.UI.Views.UC" Margin="10,0,-10,0"/>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait"/>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped"/>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:BasePage>
